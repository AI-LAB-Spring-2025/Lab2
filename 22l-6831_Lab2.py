# Question 1


import matplotlib.pyplot as plt
import numpy as np


group_A = [12, 15, 14, 13, 16, 18, 19, 15, 14, 20, 17, 14, 15,40,45,50,62]
group_B = [12, 17, 15, 13, 19, 20, 21, 18, 17, 16, 15, 14, 16, 15]

plt.boxplot(group_A)
plt.show()

plt.boxplot(group_B)
plt.show()



# Question 2

import matplotlib.pyplot as plt
import numpy as np

file = open("genome.txt","r")
data= file.read()

genome_sequence=data

genome_sequence_list=list(genome_sequence)
genome_length=len(genome_sequence)

print(genome_length)

# We want to span a range so that the helix makes a few turns.
t = np.linspace(0, 4 * np.pi, genome_length) # 4*pi gives about 2 turns
x = np.cos(t)
y = np.sin(t)
z = np.linspace(0, 5, genome_length) # z increases linearly to spread out the helix vertically
# Combine the coordinates into a (genome_length x 3) array
coordinates = np.column_stack((x, y, z))


fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')



colors={'A':'red','T':'blue','C':'green','G':'orange'}

# for i,genome_seq in enumerate(genome):
ax.plot(coordinates[:,0],coordinates[:,1],coordinates[:,2],color = 'red',marker='o')

plt.show()


# Question 3

import numpy as np
import matplotlib.pyplot as plt
from PIL import Image

image_path = "pic.png" 
img = Image.open(image_path)


img_array = np.array(img)



plt.imshow(img_array)
plt.axis('off')
plt.show()


rotated_img = np.rot90(img_array)


plt.imshow(rotated_img)
plt.axis('off')
plt.show()

flipped_img = np.fliplr(img_array)


plt.imshow(flipped_img)
plt.axis('off')
plt.show()

if img_array.shape[2] == 4:
    img_array = img_array[:, :, :3] 


gray_img = np.dot(img_array[..., :3], [0.299, 0.587, 0.114])


plt.imshow(gray_img, cmap='gray')
plt.axis('off')
plt.show()





# Question 4

# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tgErBCs4gR8h4lbbsWwSGi7RTd56OXrB
"""

from sklearn.datasets import load_iris
import numpy as np
import matplotlib.pyplot as plt

# Load the Iris dataset
iris = load_iris()
# Accessing the features (data) using NumPy array
X = np.array(iris.data) # (Features (sepal length, sepal width, petal length, petal width) #Accessing the target labels (species)
Y = np.array(iris.target) # Target variable (species: 0 for setosa, 1 for versicolor, 2 for virginica)

print("mean",np.mean(X))
print("median",np.median(X))
print("standard deviation",np.std(X))
print("min",np.min(X))
print("max",np.max(X))

sepal_features=X[:,:2]
# print("Sepal length and sepal width", sepal_features)




plt.scatter(X[:, 0], X[:, 1], c=Y, cmap='turbo')
plt.xlabel("Sepal Length")
plt.ylabel("Sepal Width")
plt.title("Sepal Length vs Sepal Width")
plt.colorbar(label='Species')
plt.show()

plt.hist(X[:, 0], bins=20, color='DarkSeaGreen', edgecolor='black')
plt.xlabel("Sepal Length")
plt.ylabel("Frequency")
plt.title("Distribution of Sepal Length")
plt.show()

plt.plot(X[:, 2], X[:, 3], color='Maroon', marker='o')
plt.xlabel("Petal Length")
plt.ylabel("Petal Width")
plt.title("Petal Length vs Petal Width")
plt.show()